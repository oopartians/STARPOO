Initialize engine version: 5.3.2f1 (e87ab445ead0)
GfxDevice: creating device client; threaded=1
Direct3D:
    Version:  Direct3D 11.0 [level 11.0]
    Renderer: AMD Radeon R9 200 Series (ID=0x6798)
    Vendor:   ATI
    VRAM:     3051 MB
Begin MonoManager ReloadAssembly
Platform assembly: F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\UnityEngine.dll (this message is harmless)
Loading F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\UnityEngine.dll into Unity Child Domain
Platform assembly: F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\Assembly-CSharp-firstpass.dll (this message is harmless)
Loading F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\Assembly-CSharp-firstpass.dll into Unity Child Domain
Platform assembly: F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\Assembly-CSharp.dll (this message is harmless)
Loading F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\Assembly-CSharp.dll into Unity Child Domain
Platform assembly: F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\UnityEngine.UI.dll (this message is harmless)
Loading F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\UnityEngine.UI.dll into Unity Child Domain
Platform assembly: F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\UnityEngine.Networking.dll (this message is harmless)
Loading F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\UnityEngine.Networking.dll into Unity Child Domain
Platform assembly: F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\Jurassic.dll (this message is harmless)
Loading F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\Jurassic.dll into Unity Child Domain
- Completed reload, in  0.064 seconds
Platform assembly: F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\System.Core.dll (this message is harmless)
Platform assembly: F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\System.dll (this message is harmless)
desktop: 1920x1080 60Hz; virtual: 1920x1080 at 0,0
<RI> Initializing input.
<RI> Input initialized.
<RI> Initialized touch support.
Initialize engine version: 5.3.2f1 (e87ab445ead0)
GfxDevice: creating device client; threaded=1
Direct3D:
    Version:  Direct3D 11.0 [level 11.0]
    Renderer: AMD Radeon R9 200 Series (ID=0x6798)
    Vendor:   ATI
    VRAM:     3051 MB
Begin MonoManager ReloadAssembly
Platform assembly: F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\UnityEngine.dll (this message is harmless)
Loading F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\UnityEngine.dll into Unity Child Domain
Platform assembly: F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\Assembly-CSharp-firstpass.dll (this message is harmless)
Loading F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\Assembly-CSharp-firstpass.dll into Unity Child Domain
Platform assembly: F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\Assembly-CSharp.dll (this message is harmless)
Loading F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\Assembly-CSharp.dll into Unity Child Domain
Platform assembly: F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\UnityEngine.UI.dll (this message is harmless)
Loading F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\UnityEngine.UI.dll into Unity Child Domain
Platform assembly: F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\UnityEngine.Networking.dll (this message is harmless)
Loading F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\UnityEngine.Networking.dll into Unity Child Domain
Platform assembly: F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\Jurassic.dll (this message is harmless)
Loading F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\Jurassic.dll into Unity Child Domain
- Completed reload, in  0.041 seconds
Platform assembly: F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\System.Core.dll (this message is harmless)
Platform assembly: F:\Develop\Projects\StarPoo\STARPOO_Data\Managed\System.dll (this message is harmless)
desktop: 1920x1080 60Hz; virtual: 1920x1080 at 0,0
<RI> Initializing input.
<RI> Input initialized.
UnloadTime: 0.510943 ms
Setting up 1 worker threads for Enlighten.
  Thread -> id: 2668 -> priority: 1 
<RI> Initialized touch support.
UnloadTime: 0.561856 ms
Setting up 1 worker threads for Enlighten.
  Thread -> id: 2300 -> priority: 1 
Unloading 6 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 3.230150 ms

Unloading 55 unused Assets to reduce memory usage. Loaded Objects now: 541.
Total: 0.356093 ms (FindLiveObjects: 0.028318 ms CreateObjectMapping: 0.017473 ms MarkObjects: 0.258785 ms  DeleteObjects: 0.050913 ms)

Server Started
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Client connected!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 6 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 3.136156 ms

Unloading 55 unused Assets to reduce memory usage. Loaded Objects now: 541.
Total: 0.303673 ms (FindLiveObjects: 0.029222 ms CreateObjectMapping: 0.016268 ms MarkObjects: 0.214499 ms  DeleteObjects: 0.043080 ms)

Unloading 5 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 1.876873 ms

Unloading 9 unused Assets to reduce memory usage. Loaded Objects now: 443.
Total: 0.402488 ms (FindLiveObjects: 0.031632 ms CreateObjectMapping: 0.011749 ms MarkObjects: 0.316326 ms  DeleteObjects: 0.042176 ms)

SendMessage : J:0:gameegg:콛var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Client connected!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 5 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 2.044074 ms

Unloading 9 unused Assets to reduce memory usage. Loaded Objects now: 443.
Total: 0.377784 ms (FindLiveObjects: 0.030126 ms CreateObjectMapping: 0.013255 ms MarkObjects: 0.292828 ms  DeleteObjects: 0.041273 ms)

SendMessage : N:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NEWBIE COMES!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NEWBIE : J:0:gameegg:콛var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

SendMessage : J:1:gameegg:콛var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

one call Match init()
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

SendMessage : S:
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

one call Match init()
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 7 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 1.574705 ms

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 445.
Total: 0.297046 ms (FindLiveObjects: 0.019883 ms CreateObjectMapping: 0.013255 ms MarkObjects: 0.238600 ms  DeleteObjects: 0.025004 ms)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

code=================
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 7 Unused Serialized files (Serialized files now loaded: 0)
code=================
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

UnloadTime: 1.516260 ms

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 445.
Total: 0.381399 ms (FindLiveObjects: 0.025607 ms CreateObjectMapping: 0.014761 ms MarkObjects: 0.309096 ms  DeleteObjects: 0.031030 ms)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

code=================
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

code=================
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Fleet destroyed Time Penalty : True
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Team destroyed Time Penalty : True
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

SendMessage : V:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 5 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 1.241206 ms

Unloading 146 unused Assets to reduce memory usage. Loaded Objects now: 457.
Total: 2.139575 ms (FindLiveObjects: 0.049407 ms CreateObjectMapping: 0.022594 ms MarkObjects: 1.987738 ms  DeleteObjects: 0.079232 ms)

SendMessage : N:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NEWBIE COMES!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NullReferenceException
  at (wrapper managed-to-native) UnityEngine.GameObject:get_transform ()
  at NetworkMakeTeam.SendMessagesToNewbie (System.Net.Sockets.TcpClient client, NetworkMessage message) [0x00000] in <filename unknown>:0 
  at Server.Update () [0x00000] in <filename unknown>:0 
  at NetworkHelper.FixedUpdate () [0x00000] in <filename unknown>:0 
 
(Filename:  Line: -1)

Fleet destroyed Time Penalty : True
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Team destroyed Time Penalty : True
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

SendMessage : V:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 5 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 1.158058 ms

Unloading 150 unused Assets to reduce memory usage. Loaded Objects now: 457.
Total: 2.128428 ms (FindLiveObjects: 0.055131 ms CreateObjectMapping: 0.023498 ms MarkObjects: 1.970566 ms  DeleteObjects: 0.078931 ms)

SendMessage : N:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NEWBIE COMES!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NullReferenceException
  at (wrapper managed-to-native) UnityEngine.GameObject:get_transform ()
  at NetworkMakeTeam.SendMessagesToNewbie (System.Net.Sockets.TcpClient client, NetworkMessage message) [0x00000] in <filename unknown>:0 
  at Server.Update () [0x00000] in <filename unknown>:0 
  at NetworkHelper.FixedUpdate () [0x00000] in <filename unknown>:0 
 
(Filename:  Line: -1)

SendMessage : @:
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 5 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 1.067980 ms
Unloading 5 Unused Serialized files (Serialized files now loaded: 0)

Unloading 81 unused Assets to reduce memory usage. Loaded Objects now: 472.
Total: 2.356485 ms (FindLiveObjects: 0.039465 ms CreateObjectMapping: 0.034344 ms MarkObjects: 2.254658 ms  DeleteObjects: 0.028017 ms)

UnloadTime: 0.836308 ms

Unloading 81 unused Assets to reduce memory usage. Loaded Objects now: 477.
Total: 2.271830 ms (FindLiveObjects: 0.062964 ms CreateObjectMapping: 0.017774 ms MarkObjects: 2.162471 ms  DeleteObjects: 0.028318 ms)

SendMessage : N:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NEWBIE COMES!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NullReferenceException
  at (wrapper managed-to-native) UnityEngine.GameObject:get_transform ()
  at NetworkMakeTeam.SendMessagesToNewbie (System.Net.Sockets.TcpClient client, NetworkMessage message) [0x00000] in <filename unknown>:0 
  at Server.Update () [0x00000] in <filename unknown>:0 
  at NetworkHelper.FixedUpdate () [0x00000] in <filename unknown>:0 
 
(Filename:  Line: -1)

SendMessage : J:0:gameegg:콛var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

SendMessage : J:1:gameegg:콛var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

SendMessage : S:
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 7 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 0.681759 ms

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 475.
Total: 1.984424 ms (FindLiveObjects: 0.024101 ms CreateObjectMapping: 0.014761 ms MarkObjects: 1.914531 ms  DeleteObjects: 0.030427 ms)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

code=================
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

code=================
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 7 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 0.671517 ms

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 470.
Total: 2.117583 ms (FindLiveObjects: 0.050311 ms CreateObjectMapping: 0.015364 ms MarkObjects: 2.022685 ms  DeleteObjects: 0.028921 ms)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

code=================
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

code=================
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Fleet destroyed Time Penalty : True
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Team destroyed Time Penalty : True
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

SendMessage : V:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 5 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 1.245725 ms

Unloading 147 unused Assets to reduce memory usage. Loaded Objects now: 480.
Total: 4.050190 ms (FindLiveObjects: 0.035247 ms CreateObjectMapping: 0.035549 ms MarkObjects: 3.867624 ms  DeleteObjects: 0.111467 ms)

SendMessage : N:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NEWBIE COMES!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NullReferenceException
  at (wrapper managed-to-native) UnityEngine.GameObject:get_transform ()
  at NetworkMakeTeam.SendMessagesToNewbie (System.Net.Sockets.TcpClient client, NetworkMessage message) [0x00000] in <filename unknown>:0 
  at Server.Update () [0x00000] in <filename unknown>:0 
  at NetworkHelper.FixedUpdate () [0x00000] in <filename unknown>:0 
 
(Filename:  Line: -1)

Fleet destroyed Time Penalty : True
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Team destroyed Time Penalty : True
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

SendMessage : V:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 5 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 1.426182 ms

Unloading 146 unused Assets to reduce memory usage. Loaded Objects now: 490.
Total: 3.896847 ms (FindLiveObjects: 0.043381 ms CreateObjectMapping: 0.038260 ms MarkObjects: 3.732658 ms  DeleteObjects: 0.081943 ms)

SendMessage : N:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NEWBIE COMES!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NullReferenceException
  at (wrapper managed-to-native) UnityEngine.GameObject:get_transform ()
  at NetworkMakeTeam.SendMessagesToNewbie (System.Net.Sockets.TcpClient client, NetworkMessage message) [0x00000] in <filename unknown>:0 
  at Server.Update () [0x00000] in <filename unknown>:0 
  at NetworkHelper.FixedUpdate () [0x00000] in <filename unknown>:0 
 
(Filename:  Line: -1)

SendMessage : @:
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 5 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 0.819136 ms

Unloading 81 unused Assets to reduce memory usage. Loaded Objects now: 490.
Total: 4.895838 ms (FindLiveObjects: 0.039164 ms CreateObjectMapping: 0.017172 ms MarkObjects: 4.801241 ms  DeleteObjects: 0.037959 ms)

Unloading 5 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 0.721225 ms

Unloading 81 unused Assets to reduce memory usage. Loaded Objects now: 490.
Total: 4.120385 ms (FindLiveObjects: 0.037356 ms CreateObjectMapping: 0.015966 ms MarkObjects: 4.031512 ms  DeleteObjects: 0.034946 ms)

SendMessage : N:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NEWBIE COMES!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NullReferenceException
  at (wrapper managed-to-native) UnityEngine.GameObject:get_transform ()
  at NetworkMakeTeam.SendMessagesToNewbie (System.Net.Sockets.TcpClient client, NetworkMessage message) [0x00000] in <filename unknown>:0 
  at Server.Update () [0x00000] in <filename unknown>:0 
  at NetworkHelper.FixedUpdate () [0x00000] in <filename unknown>:0 
 
(Filename:  Line: -1)

SendMessage : J:0:gameegg:콛var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

SendMessage : J:1:rotateAroundCenter:콛

function update(){
	for (var i = myShips.length - 1; i >= 0; i--) {
		var ship = myShips[i]
		ship.shoot()
		ship.setSpeed(5)

		var goodR = 20;
		var goodAngle = 90;

		var p = polarFrom(ship,{x:0,y:0});

		if(p.r > goodR){
			goodAngle = 0;
		}
		ship.setAngleSpeed((p.angle-goodAngle)*50);
	}
}

//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>


//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 배의 전진속력(0~5)
//setAngleSpeed(number) : 회전속도()

//polarFrom(center,target) -> angle, r
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

SendMessage : S:
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 7 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 0.637775 ms

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 488.
Total: 3.822133 ms (FindLiveObjects: 0.034042 ms CreateObjectMapping: 0.013858 ms MarkObjects: 3.741696 ms  DeleteObjects: 0.031933 ms)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

code=================
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

code=================
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)



function update(){
	for (var i = myShips.length - 1; i >= 0; i--) {
		var ship = myShips[i]
		ship.shoot()
		ship.setSpeed(5)

		var goodR = 20;
		var goodAngle = 90;

		var p = polarFrom(ship,{x:0,y:0});

		if(p.r > goodR){
			goodAngle = 0;
		}
		ship.setAngleSpeed((p.angle-goodAngle)*50);
	}
}

//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>


//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 배의 전진속력(0~5)
//setAngleSpeed(number) : 회전속도()

//polarFrom(center,target) -> angle, r
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 7 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 0.692906 ms

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 488.
Total: 3.879976 ms (FindLiveObjects: 0.023197 ms CreateObjectMapping: 0.013255 ms MarkObjects: 3.810685 ms  DeleteObjects: 0.032235 ms)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(rotateAroundCenter)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

code=================
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

code=================
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)



function update(){
	for (var i = myShips.length - 1; i >= 0; i--) {
		var ship = myShips[i]
		ship.shoot()
		ship.setSpeed(5)

		var goodR = 20;
		var goodAngle = 90;

		var p = polarFrom(ship,{x:0,y:0});

		if(p.r > goodR){
			goodAngle = 0;
		}
		ship.setAngleSpeed((p.angle-goodAngle)*50);
	}
}

//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>


//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 배의 전진속력(0~5)
//setAngleSpeed(number) : 회전속도()

//polarFrom(center,target) -> angle, r
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Fleet destroyed Time Penalty : True
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Team destroyed Time Penalty : True
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

SendMessage : V:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Fleet destroyed Time Penalty : True
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Team destroyed Time Penalty : True
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

SendMessage : V:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 5 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 2.658050 ms

Unloading 146 unused Assets to reduce memory usage. Loaded Objects now: 558.
Total: 5.273622 ms (FindLiveObjects: 0.059650 ms CreateObjectMapping: 0.024402 ms MarkObjects: 5.105216 ms  DeleteObjects: 0.083450 ms)

SendMessage : N:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NEWBIE COMES!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NullReferenceException
  at (wrapper managed-to-native) UnityEngine.GameObject:get_transform ()
  at NetworkMakeTeam.SendMessagesToNewbie (System.Net.Sockets.TcpClient client, NetworkMessage message) [0x00000] in <filename unknown>:0 
  at Server.Update () [0x00000] in <filename unknown>:0 
  at NetworkHelper.FixedUpdate () [0x00000] in <filename unknown>:0 
 
(Filename:  Line: -1)

Unloading 5 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 2.882793 ms

Unloading 146 unused Assets to reduce memory usage. Loaded Objects now: 558.
Total: 5.405275 ms (FindLiveObjects: 0.056938 ms CreateObjectMapping: 0.023799 ms MarkObjects: 5.238977 ms  DeleteObjects: 0.084956 ms)

SendMessage : N:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NEWBIE COMES!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NullReferenceException
  at (wrapper managed-to-native) UnityEngine.GameObject:get_transform ()
  at NetworkMakeTeam.SendMessagesToNewbie (System.Net.Sockets.TcpClient client, NetworkMessage message) [0x00000] in <filename unknown>:0 
  at Server.Update () [0x00000] in <filename unknown>:0 
  at NetworkHelper.FixedUpdate () [0x00000] in <filename unknown>:0 
 
(Filename:  Line: -1)

SendMessage : @:
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 5 Unused Serialized files USernaloading 5 Unused Serialized
 files (Serialized files now loaded: 0)
UnloadTime: 0.765511 ms
UnloadTime: 0.670914 ms

Unloading 81 unused Assets to reduce memory usage. Loaded Objects now: 508.
Total: 5.611038 ms (FindLiveObjects: 0.038561 ms CreateObjectMapping: 0.025004 ms MarkObjects: 5.510416 ms  DeleteObjects: 0.036452 ms)


Unloading 81 unused Assets to reduce memory usage. Loaded Objects now: 508.
Total: 5.345624 ms (FindLiveObjects: 0.050913 ms CreateObjectMapping: 0.022293 ms MarkObjects: 5.237772 ms  DeleteObjects: 0.034042 ms)

SendMessage : N:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NEWBIE COMES!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NullReferenceException
  at (wrapper managed-to-native) UnityEngine.GameObject:get_transform ()
  at NetworkMakeTeam.SendMessagesToNewbie (System.Net.Sockets.TcpClient client, NetworkMessage message) [0x00000] in <filename unknown>:0 
  at Server.Update () [0x00000] in <filename unknown>:0 
  at NetworkHelper.FixedUpdate () [0x00000] in <filename unknown>:0 
 
(Filename:  Line: -1)

SendMessage : J:0:gameegg:콛var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

SendMessage : J:1:gameegg:콛var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

SendMessage : S:
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 7 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 0.757678 ms

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 506.
Total: 5.030804 ms (FindLiveObjects: 0.028620 ms CreateObjectMapping: 0.014460 ms MarkObjects: 4.949764 ms  DeleteObjects: 0.037657 ms)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

code=================
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

code=================
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 7 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 0.697124 ms

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 506.
Total: 5.232048 ms (FindLiveObjects: 0.031933 ms CreateObjectMapping: 0.015665 ms MarkObjects: 5.152213 ms  DeleteObjects: 0.031632 ms)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

ship name : Ship(gameegg)
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

TEAM!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

code=================
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

code=================
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

var normal_offset = 0;
var t = 0;

function normal(ship,ratio){
	var target_pos = {x:0,y:0};
	target_pos.x = (groundRadius-15)*cos(360*ratio);
	target_pos.y = (groundRadius-15)*sin(360*ratio);
	
	if(ship.ammo > 4 && !checkFacingAlly(ship)){
		ship.shoot();
	}

	if(dist(target_pos,ship) > 5){
		lookPos(ship,target_pos);
		ship.setSpeed(5);
		return false;
	}
	else{
		ship.setSpeed(0);
		lookPos(ship,{x:ship.y/groundRadius/4,y:ship.x/groundRadius/4});
		return true;
	}

}

function checkFacingAlly(ship){
	for(var i = 0; i < allyShips.length; ++i){
		var ally = allyShips[i];
		if(ally.x == ship.x && ally.y == ship.y) continue;//log(1111111111111);

		var p = polarFrom(ship,ally);

		if(Math.abs(p.angle) > 80){
			continue;
		}

		if(3 > sin(Math.abs(p.angle))*p.r && p.r < 13){
			// if(ship == myShips[0])
				//log(JSON.stringify(p))
			return p.r;
		}
	}
	return Number.MAX_VALUE;
}

function attackEnemy(ship,index){
	// if(ship == myShips[0])
	// 	log(JSON.stringify(enemyShips));
	// if(ship == myShips[0])
	// 	log(enemyShips.length);
	for(var i = 0; i < enemyShips.length; ++i){
		var enemy = enemyShips[i];
		// if(ship == myShips[0]){
		// 	log(JSON.stringify(enemy));
		// 	log(i);
		// }
		var d = dist(ship,enemy);
		if(d < 3){
			ship.setSpeed(0);
			shootToEnemy(ship,enemy,index);
			return true;
		}
		else if(d < 60){
			ship.setSpeed(5);
			shootToEnemy(ship,enemy,index);
			return true;
		}

	}
	return false;
}

function evade(ship,array){
	var target;
	var nearest = 99999;
	for(var i = 0; i < array.length; ++i){
		var item = array[i];
		var p = polarFrom(item,ship);

		if(Math.abs(p.angle) > 80){
			continue;
		}
		if(1 < sin(Math.abs(p.angle))*p.r || p.r > 4){
			continue;
		}

		if(nearest > p.r){
			nearest = p.r;
			target = item;
		}
	}
	if(target != null){
		var a = polarFrom(ship,target).angle;
		if(a < 0 && a > -90 || a > 90 && a < 180){
			lookPos(ship,target,-90);
		}
		else{
			lookPos(ship,target,90);
		}
		if(Math.abs(a) > 30){
			ship.setSpeed(5);
		}
		else{
			ship.setSpeed(0);
		}
	}
}

function dontSuicide(ship){
	var p = polarFrom(ship,{x:0,y:0});
	if (a.r){

	}
}

function update(){
	t += dt;
	for (var i = 0; i <myShips.length; ++i) {
		var ship = myShips[i];




		var attacking = attackEnemy(ship,i);
		if(!attacking) 
			normal(ship,i/myShips.length);
		evade(ship,bullets);
		if(ship.ammo == 0){
			evade(ship,allyShips);
			evade(ship,enemyShips);
		}





	}
	// 	// myShips[i].shoot()
	// 	ship = myShips[i]
	// 	ship.shoot()
	// 	ship.setSpeed(5)

	// 	var goodR = 20;
	// 	var goodAngle = 90;

	// 	p = polarFrom(ship,{x:0,y:0});

	// 	if(p.r > goodR){
	// 		goodAngle = 0;
	// 	}
	// 		//log(p.angle)
	// 	ship.setAngleSpeed((p.angle-goodAngle)*50);
	// }
}



function lookAngle(ship,angle){
	angle%=360;
	if(Math.abs(angle-ship.angle) > Math.abs(ship.angle-(angle-360))){
		angle -= 360;
	}
	var v = (angle-ship.angle)/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function lookPos(ship,pos,angle){
	if(angle == null){
		angle = 0;
	}
	p = polarFrom(ship,pos);
	var a = p.angle-angle;
	a %= 360;
	if(a > 180){
		a -= 360;
	}
	else if(a < -180){
		a += 360;
	}
	var v = a/dt;
	ship.setAngleSpeed(v);
	return v < 360;
}

function shootToEnemy(ship,enemy,index){
	var pos;
	var distance = dist(ship,enemy);
	if(Math.floor(t/2 + index)%2 === 0 && distance > 2.5)
		pos = virtualPos(enemy,1.2);
	else
		pos = enemy;
	var shootable = lookPos(ship,pos);
	if(shootable && distance<5 && distance<checkFacingAlly(ship))
		ship.shoot();
}

function virtualPos(ship,d){
	var v = {
		x:ship.x + cos(ship.angle)*d,
		y:ship.y + sin(ship.angle)*d
	};

	return v;
}



//enemyShips : array<ship>
//allyShips : array<ship>
//myShips : array<ship>
//bullets : array<bulley>

//myship : x,y,angle,speed,angleSpeed,hp,ammo
//ship : x,y,angle,hp
//bullet : x,y,speed,angle

//allyShip : x,y,angle,hp,

//function
//shoot() <- 총알쏨
//setSpeed(number) : 초당 배의 전진속력(0~5)
//setAngleSpeed(number) : 초당 회전속도(-360~360)

//polarFrom(center,target) -> {angle, r}

//dt : delta time
//groundRadius : 경기장 반지름

//cos(n) : degree cos
//sin(n) : degree sin
//d2r(n) : degree to radian
//r2d(n) : radian to degree
//dist(a,b) : distance between a and b


 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Fleet destroyed Time Penalty : True
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Team destroyed Time Penalty : True
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

SendMessage : V:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 5 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 1.038757 ms

Unloading 146 unused Assets to reduce memory usage. Loaded Objects now: 511.
Total: 6.797113 ms (FindLiveObjects: 0.047599 ms CreateObjectMapping: 0.024101 ms MarkObjects: 6.626598 ms  DeleteObjects: 0.086763 ms)

SendMessage : N:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NEWBIE COMES!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NullReferenceException
  at (wrapper managed-to-native) UnityEngine.GameObject:get_transform ()
  at NetworkMakeTeam.SendMessagesToNewbie (System.Net.Sockets.TcpClient client, NetworkMessage message) [0x00000] in <filename unknown>:0 
  at Server.Update () [0x00000] in <filename unknown>:0 
  at NetworkHelper.FixedUpdate () [0x00000] in <filename unknown>:0 
 
(Filename:  Line: -1)

Fleet destroyed Time Penalty : True
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Team destroyed Time Penalty : True
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

SendMessage : V:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

Unloading 5 Unused Serialized files (Serialized files now loaded: 0)
UnloadTime: 1.203850 ms

Unloading 146 unused Assets to reduce memory usage. Loaded Objects now: 501.
Total: 6.842905 ms (FindLiveObjects: 0.061759 ms CreateObjectMapping: 0.028921 ms MarkObjects: 6.665160 ms  DeleteObjects: 0.086763 ms)

SendMessage : N:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NEWBIE COMES!
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

NullReferenceException
  at (wrapper managed-to-native) UnityEngine.GameObject:get_transform ()
  at NetworkMakeTeam.SendMessagesToNewbie (System.Net.Sockets.TcpClient client, NetworkMessage message) [0x00000] in <filename unknown>:0 
  at Server.Update () [0x00000] in <filename unknown>:0 
  at NetworkHelper.FixedUpdate () [0x00000] in <filename unknown>:0 
 
(Filename:  Line: -1)

close client
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

SendMessage : E:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

close server
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

close client
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

SendMessage : E:gameegg
 
(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 37)

